{"version":3,"sources":["app.js","environment.js","main.js","todo.js","resources/index.js","/Users/devatman/devLove/addStuff/src/app.html"],"names":["App","heading","firstName","lastName","todos","todoDescription","neweArr","arr","arrCopy","addTodo","push","removeTodo","todo","index","indexOf","splice","addTwo","a","b","newFunct","console","log","pop","shift","newArr","concat","sayHello","alert","fullName","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Todo","description","done"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEaA,cAAAA;AACX,mBAAc;AAAA;;AACZ,WAAKC,OAAL,GAAe,gCAAf;AACA,WAAKC,SAAL,GAAiB,OAAjB;AACA,WAAKC,QAAL,GAAgB,MAAhB;AACA,WAAKC,KAAL,GAAa,EAAb;AACA,WAAKC,eAAL,GAAuB,EAAvB;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,GAAL,GAAW,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,GAArC,CAAX;AACA,WAAKC,OAAL,GAAe,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAAf;AAED;;kBAEDC,6BAAU;AACR,UAAG,KAAKJ,eAAR,EAAyB;AACvB,aAAKD,KAAL,CAAWM,IAAX,CAAgB,eAAS,KAAKL,eAAd,CAAhB;AACA,aAAKA,eAAL,GAAuB,EAAvB;AACD;AACF;;kBAEDM,iCAAWC,MAAM;AACf,UAAIC,QAAQ,KAAKT,KAAL,CAAWU,OAAX,CAAmBF,IAAnB,CAAZ;AACA,UAAIC,UAAU,CAAC,CAAf,EAAkB;AAChB,aAAKT,KAAL,CAAWW,MAAX,CAAkBF,KAAlB,EAAwB,CAAxB;AACD;AACF;;kBAEDG,yBAAOC,GAAEC,GAAE;AACT,aAAOD,IAAIC,CAAX;AACD;;kBAEDC,6BAASZ,KAAI;AACXa,cAAQC,GAAR,CAAY,cAAZ,EAA2Bd,IAAIe,GAAJ,EAA3B;AACAF,cAAQC,GAAR,CAAY,gBAAZ,EAA6Bd,IAAIgB,KAAJ,EAA7B;AACAH,cAAQC,GAAR,CAAY,kBAAZ,EAA+Bd,GAA/B;AACD;;kBAEDiB,yBAAOjB,KAAIC,SAAQ;AACjBD,UAAIkB,MAAJ,CAAWjB,OAAX;AACAY,cAAQC,GAAR,CAAY,UAAZ,EAAuBd,GAAvB,EAA4BC,OAA5B;AACD;;kBAMDkB,+BAAW;AACTC,uBAAe,KAAKC,QAApB;AACD;;;;0BANc;AACb,qCAA2B,KAAK1B,SAAhC;AACD;;;;;;;;;;;;oBC9CY;AACb2B,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;MCxBYC,eAAAA,OACX,cAAYC,WAAZ,EAAyB;AAAA;;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,IAAL,GAAY,KAAZ;AACD;;;;;;;;UCJajB,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;ACFD","file":"app-bundle.js","sourcesContent":["import {Todo} from './todo'\n\nexport class App {\n  constructor() {\n    this.heading = 'Add shit that needs to be done'\n    this.firstName = \"Peter\"\n    this.lastName = \"Kona\"\n    this.todos = []\n    this.todoDescription = ''\n    this.neweArr = []\n    this.arr = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n    this.arrCopy = [110, 120, 130, 140, 150, 160, 170, 180, 190, 200]\n\n  }\n\n  addTodo() {\n    if(this.todoDescription) {\n      this.todos.push(new Todo(this.todoDescription))\n      this.todoDescription = ''\n    }\n  }\n\n  removeTodo(todo) {\n    let index = this.todos.indexOf(todo)\n    if (index !== -1) {\n      this.todos.splice(index,1)\n    }\n  }\n\n  addTwo(a,b){\n    return a + b\n  }\n\n  newFunct(arr){\n    console.log('this is pop ',arr.pop());\n    console.log('this is shift ',arr.shift());\n    console.log('this is my array',arr);\n  }\n\n  newArr(arr,arrCopy){\n    arr.concat(arrCopy)\n    console.log('arr copy',arr, arrCopy);\n  }\n\n  get fullName() {\n    return `$(this.lastName) ${this.firstName}`\n  }\n\n  sayHello() {\n    alert(`Hello ${this.fullName}`)\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Todo {\n  constructor(description) {\n    this.description = description\n    this.done = false\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"../src"}